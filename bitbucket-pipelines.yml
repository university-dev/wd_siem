
image: python:3.11

pipelines:
  default:
    - step:
        name: Lint lambda functions
        condition:
          changesets:
            includePaths:
              - "src/**"
              - "wd_siem/**"
        caches:
          - pip
        script:
          - pip install flake8
          - flake8 src --extend-exclude=dist,build,test,target --show-source --statistics --max-line-length 120 --ignore F401 --ignore W605
    - step:
        name: CDK Synth and Deploy - Production
        deployment: production
        trigger: manual
        condition:
          changesets:
            includePaths:
              - src/**
              - wd_siem/**
        oidc: true
        caches:
          - pip
          - node
        script:
          - export AWS_REGION=us-west-2
          - export AWS_ROLE_ARN=$oidc_role_arn_production
          - export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token
          - echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
          - apt-get update
          - apt-get install -y ca-certificates curl gnupg
          - mkdir -p /etc/apt/keyrings
          - curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
          - NODE_MAJOR=20
          - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
          - apt-get install -y nodejs npm
          - npm install -g aws-cdk
          - python -m pip install -r requirements.txt
          - cdk synth -c config=production
          - cdk deploy -v -c config=production --trace --all


          # build documentation
          - apt-get -qq install zip
          - cd docs
          - python -m pip install -r requirements.txt
          - make clean && make html
          - cd build
          - zip -r wd_siem-doc.zip html/*

        artifacts:
          paths:
            - docs/build/wd_siem-doc.zip
